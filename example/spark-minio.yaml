# Example spark application use MinIO as event log storage
apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: spark-pi
  namespace: datakube
spec:
  type: Scala
  mode: cluster
  image: "dnskr/datakube-spark:v3.0.0"
  imagePullPolicy: Always
  mainClass: org.apache.spark.examples.SparkPi
  mainApplicationFile: "local:///opt/spark/examples/jars/spark-examples_2.12-3.0.0.jar"
  sparkVersion: "3.0.0"
  hadoopConf:
    "fs.s3a.endpoint": "minio.datakube.svc.cluster.local:9000"
    "fs.s3a.access.key": "YOURACCESSKEY"
    "fs.s3a.secret.key": "YOURSECRETKEY"
    "fs.s3a.path.style.access": "true"
    "fs.s3a.connection.ssl.enabled": "false"
    "fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
  sparkConf:
    "spark.eventLog.enabled": "true"
    "spark.eventLog.dir": "s3a://spark-history/."
  restartPolicy:
    type: Never
  volumes:
    - name: "test-volume"
      hostPath:
        path: "/tmp"
        type: Directory
  driver:
    cores: 1
    coreLimit: "1200m"
    memory: "512m"
    labels:
      version: 3.0.0
    serviceAccount: sparkoperator
    volumeMounts:
      - name: "test-volume"
        mountPath: "/tmp"
  executor:
    cores: 1
    instances: 1
    memory: "512m"
    labels:
      version: 3.0.0
    volumeMounts:
      - name: "test-volume"
        mountPath: "/tmp"
